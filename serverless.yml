---
service: serverlessapp
frameworkVersion: "3"
useDotenv: true
variablesResolutionMode: 20210326
disabledDeprecations:
  - CLI_OPTIONS_SCHEMA # some Serverless plugins haven't been updated yet and generate warnings

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:region, 'us-east-1'}
  stage: ${env:stage, 'dev'}
  memorySize: 512
  timeout: 6
  logRetentionInDays: 7
  lambdaHashingVersion: 20201221 # for upcoming Serverless v3

  vpc:
    securityGroupIds:
      - ${env:security_group, ""}
    subnetIds:
      - ${env:subnet_1, ""}
      - ${env:subnet_2, ""}
  role: ${env:lambda_role_arn, ""}

  apiGateway:
    restApiId: ${env:rest_api_id}
    restApiRootResourceId: ${env:rest_api_root_resource_id}
    minimumCompressionSize: 1000

  deploymentBucket:
    name: ${env:s3_bucket}
  cfnRole: ${env:cloudformation_role}

  environment:
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    SERVERLESS_STAGE: ${self:provider.stage}

    APP_DIST_URL: ${env:dist_bucket_url}
    APP_PUBLIC_URL: ${env:dist_bucket_url}
    APIGATEWAY_URL:
      Fn::Join:
        - ""
        - - https://
          - ${env:rest_api_id}
          - .execute-api.
          - ${env:region}
          - .amazonaws.com/
          - ${self:provider.stage}

plugins:
  - serverless-webpack
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-s3-deploy

functions:
  serve:
    # Any web request regardless of path or method will be handled by a single Lambda function
    handler: handler.serve
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /{any+}
          method: any
          cors: true

custom:
  scripts:
    hooks:
      # Build the client-side script before packaging backend code
      package:initialize: "npm run build:browser"
      deploy:finalize: "npx sls s3deploy --stage ${self:provider.stage}"

  webpack:
    webpackConfig: "webpack.server.config.js"

  assets:
    # Automatically copy distribution folder to S3 stopped working; do it manually (see `scripts.hooks.deploy:finalize`)
    auto: false
    targets:
      - bucket: ${env:s3_bucket}
        acl: public-read
        files:
          - source: dist/
            headers:
              CacheControl: max-age=31104000 # 1 year
            globs:
              - "**/*"

  serverless-offline:
    useChildProcesses: true
    noPrependStageInUrl: true
    httpPort: 3000
    lambdaPort: 3002

